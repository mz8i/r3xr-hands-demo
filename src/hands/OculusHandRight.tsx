/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { MeshWobbleMaterial, useGLTF } from '@react-three/drei'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    r_handMeshNode: THREE.SkinnedMesh
    b_r_wrist: THREE.Bone
    b_r_thumb0: THREE.Bone
    b_r_thumb1: THREE.Bone
    b_r_thumb2: THREE.Bone
    b_r_thumb3: THREE.Bone
    b_r_thumb_null: THREE.Bone
    b_r_index1: THREE.Bone
    b_r_index2: THREE.Bone
    b_r_index3: THREE.Bone
    b_r_index_null: THREE.Bone
    b_r_middle1: THREE.Bone
    b_r_middle2: THREE.Bone
    b_r_middle3: THREE.Bone
    b_r_middle_null: THREE.Bone
    b_r_ring1: THREE.Bone
    b_r_ring2: THREE.Bone
    b_r_ring3: THREE.Bone
    b_r_ring_null: THREE.Bone
    b_r_forearm_stub: THREE.Bone
    b_r_pinky0: THREE.Bone
    b_r_pinky1: THREE.Bone
    b_r_pinky2: THREE.Bone
    b_r_pinky3: THREE.Bone
    b_r_pinky_null: THREE.Bone
  }
  materials: {
    lambert2: THREE.MeshStandardMaterial
  }
}

export function OculusHandRight(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/OculusHand_R.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null} scale={[0.01, 0.01, 0.01]}>
      <primitive object={nodes.b_r_wrist} />
      <primitive object={nodes.b_r_thumb0} />
      <primitive object={nodes.b_r_thumb1} />
      <primitive object={nodes.b_r_thumb2} />
      <primitive object={nodes.b_r_thumb3} />
      <primitive object={nodes.b_r_thumb_null} />
      <primitive object={nodes.b_r_index1} />
      <primitive object={nodes.b_r_index2} />
      <primitive object={nodes.b_r_index3} />
      <primitive object={nodes.b_r_index_null} />
      <primitive object={nodes.b_r_middle1} />
      <primitive object={nodes.b_r_middle2} />
      <primitive object={nodes.b_r_middle3} />
      <primitive object={nodes.b_r_middle_null} />
      <primitive object={nodes.b_r_ring1} />
      <primitive object={nodes.b_r_ring2} />
      <primitive object={nodes.b_r_ring3} />
      <primitive object={nodes.b_r_ring_null} />
      <primitive object={nodes.b_r_forearm_stub} />
      <primitive object={nodes.b_r_pinky0} />
      <primitive object={nodes.b_r_pinky1} />
      <primitive object={nodes.b_r_pinky2} />
      <primitive object={nodes.b_r_pinky3} />
      <primitive object={nodes.b_r_pinky_null} />
      <skinnedMesh
        geometry={nodes.r_handMeshNode.geometry}
        skeleton={nodes.r_handMeshNode.skeleton}
        material={materials['lambert2']}
        material-skinning={true}
        frustumCulled={false}
        receiveShadow={true}
        castShadow={true}
      />
    </group>
  )
}

useGLTF.preload('/models/OculusHand_R.glb')
